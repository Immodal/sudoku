/* Standard Game string format:
line 0: space separated list of valid symbols
line 1+: 
  comma separated values with each line representing a row on the grid.
  use a space (" ") to denote an empty cell
*/
const test44EasyGameA = {
  input: `1 2 3 4
 ,1, ,4
4,2,1, 
 ,3,4,2
2, ,3, `,
  inputf2: `0104
4210
0342
2030`,
  complete: `1 2 3 4
3,1,2,4
4,2,1,3
1,3,4,2
2,4,3,1`,
  completef2: `3124
4213
1342
2431`,
  completeInvalid1: `1 2 3 4
3,1,2,4
4,2,1,3
1,3,3,2
2,4,3,1`, // invalid @ [2,2]
  completeInvalid1f2: `3124
4213
1332
2431`, // invalid @ [2,2]
  completeInvalid2: `1 2 3 4
2,1,2,4
4,2,1,3
1,3,4,2
2,4,3,1`, // invalid @ [0,0]
  completeInvalid3: `1 2 3 4
3,1,2,4
4,2,1,@
1,3,4,2
2,4,3,1`, // invalid @ [1,3]
}

const test44HardGameA = {
  input: `1 2 3 4
1,4, , 
 , ,4,1
2,1, , 
 , ,1,2`,
 inputf2: `1400
0041
2100
0012`,
  complete: `1 2 3 4
1,4,2,3
3,2,4,1
2,1,3,4
4,3,1,2`,
}

const test99EasyGameA = {
  input: `1 2 3 4 5 6 7 8 9
 ,1, , ,4,8,7,2, 
 ,7, ,2, , ,5, ,6
3, , ,7, , ,4, , 
 , ,5, ,6, , ,7,8
6, , ,5, ,3, , ,9
2,3, , ,9, ,1, , 
 , ,8, , ,6, , ,2
4, ,3, , ,5, ,1, 
 ,9,2,3,8, , ,5, `,
  complete: `1 2 3 4 5 6 7 8 9
5,1,9,6,4,8,7,2,3
8,7,4,2,3,1,5,9,6
3,2,6,7,5,9,4,8,1
9,4,5,1,6,2,3,7,8
6,8,1,5,7,3,2,4,9
2,3,7,8,9,4,1,6,5
7,5,8,4,1,6,9,3,2
4,6,3,9,2,5,8,1,7
1,9,2,3,8,7,6,5,4`,
  completeInvalid1: `1 2 3 4 5 6 7 8 9
5,1,9,6,4,8,7,2,3
8,7,4,2,3,1,5,9,6
3,2,6,7,5,9,4,8,1
9,4,5,1,6,1,3,7,8
6,8,1,5,7,3,2,4,9
2,3,7,8,9,4,1,6,5
7,5,8,4,1,6,9,3,2
4,6,3,9,2,5,8,1,7
1,9,2,3,8,7,6,5,4`, // invalid @ [3,5]
  completeInvalid2: `1 2 3 4 5 6 7 8 9
5,1,9,6,4,8,7,2,3
8,7,4,2,3,1,5,9,6
3,2,6,7,5,9,4,8,1
9,4,5,1,6,2,3,7,8
6,8,1,5,7,3,2,4,9
2,3,7,8,9,4,1,6,5
7,5,8,4,1,6,9,3,2
4,6,3,9,2,5,8,1,7
1,9,2,3,8,7,6,5,1`, // invalid @ [8,8]
  completeInvalid3: `1 2 3 4 5 6 7 8 9
5,1,9,6,4,8,7,2,3
8,7,4,2,3,1,5,9,6
3,2,6,7,5,9,4,8,1
9,4,5,1,6,2,3,7,8
6,8,1,5,7,3,2,4,9
2,3,7,8,9,4,1,6,5
7,5,8,4,1,6,9,3,2
4,6,E,9,2,5,8,1,7
1,9,2,3,8,7,6,5,4`, // invalid @ [7,2]
}

const test99EasyGameB = {
  input: `1 2 3 4 5 6 7 8 9
 , , ,2,6,1, ,7, 
 , , , ,7,8,5, ,9
 ,7,8,3, ,9,1,2, 
 , , , ,3, , , , 
3, , , ,9, ,2, , 
 ,8, , ,2, , ,3, 
 ,3, ,7,4,2, , , 
8,6,7,9,1, ,4, , 
 , , ,6,8,5,7,1,3`,
}

const test99HardGameA = {
  input: `1 2 3 4 5 6 7 8 9
 , ,8, , ,2, ,1, 
 , ,9,1, , , ,3,5
5, , ,4, , , , ,6
1,4, , , , , , , 
 , ,2, , , ,9, , 
 , , , , , , ,7,3
9, , , , ,4, , ,8
6,8, , , ,9,5, , 
 ,2, ,5, , ,1, , `,
  complete: `1 2 3 4 5 6 7 8 9
4,3,8,6,5,2,7,1,9
2,6,9,1,7,8,4,3,5
5,1,7,4,9,3,2,8,6
1,4,6,9,3,7,8,5,2
3,7,2,8,6,5,9,4,1
8,9,5,2,4,1,6,7,3
9,5,1,7,2,4,3,6,8
6,8,4,3,1,9,5,2,7
7,2,3,5,8,6,1,9,4`,
}

const test99EasyGameC = {
  inputf2: `200080300
060070084
030500209
000105408
000000000
402706000
301007040
720040060
004010003`,
}