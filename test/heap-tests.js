const heapTests = {
  'behaves as a heap should': () => {
    const check = (v, h) => eq(h.peek(), v)
    let h = Heap([])
  
    h = h.push(50)
    check(50, h)
    h = h.push(40)
    check(40, h)
    h = h.push(45)
    check(40, h)
    h = h.push(35)
    check(35, h)
    h = h.push(25)
    check(25, h)
    h = h.push(55)
    check(25, h)
    h = h.push(32)
    check(25, h)
    h = h.pop()
    check(32, h)
    h = h.pop()
    check(35, h)
    h = h.pop()
    check(40, h)
    h = h.pop()
    check(45, h)
    h = h.pop()
    check(50, h)
    h = h.pop()
    check(55, h)
  },

  'non-default compare works': () => {
    const check = (v, h) => eq(h.peek(), v)
    let h = Heap([], (a,b) => a > b)
  
    h = h.push(50)
    check(50, h)
    h = h.push(40)
    check(50, h)
    h = h.push(45)
    check(50, h)
    h = h.push(35)
    check(50, h)
    h = h.push(25)
    check(50, h)
    h = h.push(55)
    check(55, h)
    h = h.push(32)
    check(55, h)
    h = h.pop()
    check(50, h)
    h = h.pop()
    check(45, h)
    h = h.pop()
    check(40, h)
    h = h.pop()
    check(35, h)
    h = h.pop()
    check(32, h)
    h = h.pop()
    check(25, h)
  }
}